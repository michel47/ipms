
ØÐ#

set -e
symb=my
rootdir=/public
# usage:
# . rc.sh
# pubid
#
tmpdir=$$; if test ! -d $tmpdir; then mkdir $tmpdir; fi
date=$(date +%D)
peerid=$(ipfs config Identity.PeerID)
gateway=$(ipfs config Addresses.Gateway)
gwport=$(echo $gateway | cut -d/ -f 5)
gwhost=$(echo $gateway | cut -d/ -f 3)

# create public identity if doesn't exist !
if ipfs files mkdir -p $rootdir/my/identity --cid-ver=0 2>/dev/null; then true; fi
qm=$(ipfs files stat --hash $rootdir/my/identity)
if test ! -d "$DICT" ; then
  export DICT="$(pwd)/etc"
fi
# get a hip6 and a name
eval $(hip6.pl 2>/dev/null | eyml)
eval $(fullname -a $peerid | eyml)
uniq="${hipq:-cadavre exquis}"

# create my key is doesn't exists
if ipfs key list -l | grep -q -w $symb; then
 key=$(ipfs key list -l | grep -w $symb | cut -d' ' -f 1)
else
 key=$(ipfs key gen -t rsa -s 3072 $symb)
fi
echo key: $key
if ! ipfs files stat --hash $rootdir/my/identity/public.yml 1>/dev/null 2>&1; then
ipfs files write --create --truncate $rootdir/my/identity/public.yml <<EOF
--- # This is my blockRingâ„¢ Sovereign identity
name: "$fullname"
uniq: "$uniq"
date: $date
exp: never
hip6: $hip6
user: $user
email: $email
attr: QmbFMke1KXqnYyBBWxB74N4c5SBnJMVAiMNRcGu6x1AwQH
EOF
fi

# publish symbols map (i.e. all ipns' keys)
echo "--- # symb map ($fullname)" > $tmpdir/symb.yml
ipfs key list -l | perl -ne 'printf "%s: %s\n", reverse split/\s+/,$_' >> $tmpdir/symb.yml
qm=$(ipfs add -Q $tmpdir/symb.yml)

if ipfs files rm $rootdir/my/identity/attr/pkeys.yml 2>/dev/null; then true;
else
if ipfs files mkdir -p $rootdir/my/identity/attr --cid-ver=0 2>/dev/null; then true; fi
fi
#ipfs cat /ipfs/$qm | wc
ipfs files cp /ipfs/$qm $rootdir/my/identity/attr/pkeys.yml
attr=$(ipfs files stat --hash $rootdir/my/identity/attr)
echo attr: $attr

ipfs files read $rootdir/my/identity/public.yml | sed -e "s/attr: .*/attr: $attr/" - > $tmpdir/public.yml 
cat $tmpdir/public.yml | ipfs files write $rootdir/my/identity/public.yml

rootkey=$(ipfs files stat --hash $rootdir)
ipfs name publish --key=$symb --allow-offline /ipfs/$rootkey/my &
ipfs --offline name publish --allow-offline /ipfs/$rootkey 1>/dev/null 2>&1
echo "url: https://gateway.ipfs.io/ipns/$key"
echo "url: http://$gwhost:$gwport/ipfs/$rootkey/my"

rm -rf $tmpdir
Ð