
ιθίθithub.com/goerli/testnet/blob/master/bootnodes.txt"},{"ip":"213.186.16.82","port":30303,"id":"f4a9c6ee28586009fb5a96c8af13a58ed6d8315a9eee4772212c1d4d9cebe5a8b8a78ea4434f318726317d04a3f531a1ef0420cf9752605a562cfe858c46e263","location":"","comment":"Source: https://github.com/goerli/testnet/blob/master/bootnodes.txt"}]}')},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hardforks=[["chainstart",r(1808)],["homestead",r(1809)],["dao",r(1810)],["tangerineWhistle",r(1811)],["spuriousDragon",r(1812)],["byzantium",r(1813)],["constantinople",r(1814)],["petersburg",r(1815)],["istanbul",r(1816)]]},function(e){e.exports=JSON.parse('{"name":"chainstart","comment":"Start of the Ethereum main chain","eip":{"url":"","status":""},"status":"","gasConfig":{"minGasLimit":{"v":5000,"d":"Minimum the gas limit may ever be"},"gasLimitBoundDivisor":{"v":1024,"d":"The bound divisor of the gas limit, used in update calculations"}},"gasPrices":{"base":{"v":2,"d":"Gas base cost, used e.g. for ChainID opcode (Istanbul)"},"tierStep":{"v":[0,2,3,5,8,10,20],"d":"Once per operation, for a selection of them"},"exp":{"v":10,"d":"Once per EXP instuction"},"expByte":{"v":10,"d":"Times ceil(log256(exponent)) for the EXP instruction"},"sha3":{"v":30,"d":"Once per SHA3 operation"},"sha3Word":{"v":6,"d":"Once per word of the SHA3 operation\'s data"},"sload":{"v":50,"d":"Once per SLOAD operation"},"sstoreSet":{"v":20000,"d":"Once per SSTORE operation if the zeroness changes from zero"},"sstoreReset":{"v":5000,"d":"Once per SSTORE operation if the zeroness does not change from zero"},"sstoreRefund":{"v":15000,"d":"Once per SSTORE operation if the zeroness changes to zero"},"jumpdest":{"v":1,"d":"Refunded gas, once per SSTORE operation if the zeroness changes to zero"},"log":{"v":375,"d":"Per LOG* operation"},"logData":{"v":8,"d":"Per byte in a LOG* operation\'s data"},"logTopic":{"v":375,"d":"Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas"},"create":{"v":32000,"d":"Once per CREATE operation & contract-creation transaction"},"call":{"v":40,"d":"Once per CALL operation & message call transaction"},"callStipend":{"v":2300,"d":"Free gas given at beginning of call"},"callValueTransfer":{"v":9000,"d":"Paid for CALL when the value transfor is non-zero"},"callNewAccount":{"v":25000,"d":"Paid for CALL when the destination address didn\'t exist prior"},"selfdestructRefund":{"v":24000,"d":"Refunded following a selfdestruct operation"},"memory":{"v":3,"d":"Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL"},"quadCoeffDiv":{"v":512,"d":"Divisor for the quadratic particle of the memory cost equation"},"createData":{"v":200,"d":""},"tx":{"v":21000,"d":"Per transaction. NOTE: Not payable on data of calls between transactions"},"txCreation":{"v":32000,"d":"The cost of creating a contract via tx"},"txDataZero":{"v":4,"d":"Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions"},"txDataNonZero":{"v":68,"d":"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions"},"copy":{"v":3,"d":"Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added"},"ecRecover":{"v":3000,"d":""},"sha256":{"v":60,"d":""},"sha256Word":{"v":12,"d":""},"ripemd160":{"v":600,"d":""},"ripemd160Word":{"v":120,"d":""},"identity":{"v":15,"d":""},"identityWord":{"v":3,"d":""}},"vm":{"stackLimit":{"v":1024,"d":"Maximum size of VM stack allowed"},"callCreateDepth":{"v":1024,"d":"Maximum depth of call/create stack"},"maxExtraDataSize":{"v":32,"d":"Maximum size extra data may be after Genesis"}},"pow":{"minimumDifficulty":{"v":131072,"d":"The minimum that the difficulty may ever be"},"difficultyBoundDivisor":{"v":2048,"d":"The bound divisor of the difficulty, used in the update calculations"},"durationLimit":{"v":13,"d":"The decision boundary on the blocktime duration used to determine whether difficulty should go up or not"},"epochDuration":{"v":30000,"d":"Duration between proof-of-work epochs"},"timebombPeriod":{"v":100000,"d":"Exponential difficulty timebomb period"},"minerReward":{"v":"5000000000000000000","d":"the amount a miner get rewarded for mining a block"}},"casper":{},"sharding":{}}')},function(e){e.exports=JSON.parse('{"name":"homestead","comment":"Homestead hardfork with protocol and network changes","eip":{"url":"https://eips.ethereum.org/EIPS/eip-606","status":"Final"},"gasConfig":{},"gasPrices":{},"vm":{},"pow":{},"casper":{},"sharding":{}}')},function(e){e.exports=JSON.parse('{"name":"dao","comment":"DAO rescue hardfork","eip":{"url":"https://eips.ethereum.org/EIPS/eip-779","status":"Final"},"gasConfig":{},"gasPrices":{},"vm":{},"pow":{},"casper":{},"sharding":{}}')},function(e){e.exports=JSON.parse('{"name":"tangerineWhistle","comment":"Hardfork with gas cost changes for IO-heavy operations","eip":{"url":"https://eips.ethereum.org/EIPS/eip-608","status":"Final"},"gasConfig":{},"gasPrices":{"sload":{"v":200,"d":"Once per SLOAD operation"},"call":{"v":700,"d":"Once per CALL operation & message call transaction"}},"vm":{},"pow":{},"casper":{},"sharding":{}}')},function(e){e.exports=JSON.parse('{"name":"spuriousDragon","comment":"HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit","eip":{"url":"https://eips.ethereum.org/EIPS/eip-607","status":"Final"},"gasConfig":{},"gasPrices":{"expByte":{"v":50,"d":"Times ceil(log256(exponent)) for the EXP instruction"}},"vm":{"maxCodeSize":{"v":24576,"d":"Maximum length of contract code"}},"pow":{},"casper":{},"sharding":{}}')},function(e){e.exports=JSON.parse('{"name":"byzantium","comment":"Hardfork with new precompiles, instructions and other protocol changes","eip":{"url":"https://eips.ethereum.org/EIPS/eip-609","status":"Final"},"gasConfig":{},"gasPrices":{"modexpGquaddivisor":{"v":20,"d":"Gquaddivisor from modexp precompile for gas calculation"},"ecAdd":{"v":500,"d":"Gas costs for curve addition precompile"},"ecMul":{"v":40000,"d":"Gas costs for curve multiplication precompile"},"ecPairing":{"v":100000,"d":"Base gas costs for curve pairing precompile"},"ecPairingWord":{"v":80000,"d":"Gas costs regarding curve pairing precompile input length"}},"vm":{},"pow":{"minerReward":{"v":"3000000000000000000","d":"the amount a miner get rewarded for mining a block"}},"casper":{},"sharding":{}}')},function(e){e.exports=JSON.parse('{"name":"constantinople","comment":"Postponed hardfork including EIP-1283 (SSTORE gas metering changes)","eip":{"url":"https://eips.ethereum.org/EIPS/eip-1013","status":"Final"},"gasConfig":{},"gasPrices":{"netSstoreNoopGas":{"v":200,"d":"Once per SSTORE operation if the value doesn\'t change"},"netSstoreInitGas":{"v":20000,"d":"Once per SSTORE operation from clean zero"},"netSstoreCleanGas":{"v":5000,"d":"Once per SSTORE operation from clean non-zero"},"netSstoreDirtyGas":{"v":200,"d":"Once per SSTORE operation from dirty"},"netSstoreClearRefund":{"v":15000,"d":"Once per SSTORE operation for clearing an originally existing storage slot"},"netSstoreResetRefund":{"v":4800,"d":"Once per SSTORE operation for resetting to the original non-zero value"},"netSstoreResetClearRefund":{"v":19800,"d":"Once per SSTORE operation for resetting to the original zero value"}},"vm":{},"pow":{"minerReward":{"v":"2000000000000000000","d":"The amount a miner gets rewarded for mining a block"}},"casper":{},"sharding":{}}')},function(e){e.exports=JSON.parse('{"name":"petersburg","comment":"Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople","eip":{"url":"https://github.com/ethereum/EIPs/pull/1716","status":"Draft"},"gasConfig":{},"gasPrices":{"netSstoreNoopGas":{"v":null,"d":"Removed along EIP-1283"},"netSstoreInitGas":{"v":null,"d":"Removed along EIP-1283"},"netSstoreCleanGas":{"v":null,"d":"Removed along EIP-1283"},"netSstoreDirtyGas":{"v":null,"d":"Removed along EIP-1283"},"netSstoreClearRefund":{"v":null,"d":"Removed along EIP-1283"},"netSstoreResetRefund":{"v":null,"d":"Removed along EIP-1283"},"netSstoreResetClearRefund":{"v":null,"d":"Removed along EIP-1283"}},"vm":{},"pow":{},"casper":{},"sharding":{}}')},function(e){e.exports=JSON.parse('{"name":"istanbul","comment":"HF targeted for October 2019 following the Constantinople/Petersburg HF","eip":{"url":"https://eips.ethereum.org/EIPS/eip-1679","status":"Draft"},"gasConfig":{},"gasPrices":{"blake2Round":{"v":1,"d":"Gas cost per round for the Blake2 F precompile"},"ecAdd":{"v":150,"d":"Gas costs for curve addition precompile"},"ecMul":{"v":6000,"d":"Gas costs for curve multiplication precompile"},"ecPairing":{"v":45000,"d":"Base gas costs for curve pairing precompile"},"ecPairingWord":{"v":34000,"d":"Gas costs regarding curve pairing precompile input length"},"txDataNonZero":{"v":16,"d":"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions"},"sstoreSentryGasEIP2200":{"v":2300,"d":"Minimum gas required to be present for an SSTORE call, not consumed"},"sstoreNoopGasEIP2200":{"v":800,"d":"Once per SSTORE operation if the value doesn\'t change"},"sstoreDirtyGasEIP2200":{"v":800,"d":"Once per SSTORE operation if a dirty value is changed"},"sstoreInitGasEIP2200":{"v":20000,"d":"Once per SSTORE operation from clean zero to non-zero"},"sstoreInitRefundEIP2200":{"v":19200,"d":"Once per SSTORE operation for resetting to the original zero value"},"sstoreCleanGasEIP2200":{"v":5000,"d":"Once per SSTORE operation from clean non-zero to something else"},"sstoreCleanRefundEIP2200":{"v":4200,"d":"Once per SSTORE operation for resetting to the original non-zero value"},"sstoreClearRefundEIP2200":{"v":15000,"d":"Once per SSTORE operation for clearing an originally existing storage slot"}},"vm":{},"pow":{},"casper":{},"sharding":{}}')},function(e,t,r){"use strict";var n=r(1160),i=r(126),a=r(1370),s=r(1161)(i.ETH_BLOCK_LIST,(function(e){var t=n.decode(e).map((function(e){return a.util.deserialize(e)}));return t.count=t.length,t}));s.util.serialize=function(e){var t=e.map((function(e){return e._ethObj.raw}));return n.encode(t)},e.exports=s},function(e,t,r){"use strict";var n=r(126),i=r(1367),a=r(1245)(n.ETH_STATE_TRIE,i);e.exports=a},function(e,t,r){"use strict";(function(t){var n=r(1160),i=r(1197);function a(e,t,r){if(Array.isArray(e))this.parseNode(e);else if(this.type=e,"branch"===e){var n=t;this.raw=Array.apply(null,Array(17)),n&&n.forEach((function(e){this.set.apply(this,e)}))}else this.raw=Array(2),this.setValue(r),this.setKey(t)}function s(e,t){return e.length%2?e.unshift(1):(e.unshift(0),e.unshift(0)),t&&(e[0]+=2),e}function o(e){return e=e[0]%2?e.slice(1):e.slice(2)}function u(e){return e[0]>1}function f(e){for(var r=new t(e),n=[],i=0;i<r.length;i++){var a=2*i;n[a]=r[i]>>4,n[++a]=r[i]%16}return n}function c(e){for(var r=new t(e.length/2),n=0;n<r.length;n++){var i=2*n;r[n]=(e[i]<<4)+e[++i]}return r}function h(e){return 17===e.length?"branch":2===e.length?u(f(e[0]))?"leaf":"extention":void 0}e.exports=a,a.isRawNode=function(e){return Array.isArray(e)&&!t.isBuffer(e)},a.addHexPrefix=s,a.removeHexPrefix=o,a.isTerminator=u,a.stringToNibbles=f,a.nibblesToBuffer=c,a.getNodeType=h,Object.defineProperty(a.prototype,"value",{get:function(){return this.getValue()},set:function(e){this.setValue(e)}}),Object.defineProperty(a.prototype,"key",{get:function(){return this.getKey()},set:function(e){this.setKey(e)}}),a.prototype.parseNode=function(e){this.raw=e,this.type=h(e)},a.prototype.setValue=function(e,t){"branch"!==this.type?this.raw[1]=e:(1===arguments.length&&(t=e,e=16),this.raw[e]=t)},a.prototype.getValue=function(e){if("branch"!==this.type)return this.raw[1];0===arguments.length&&(e=16);var t=this.raw[e];return null!==t&&void 0!==t&&0!==t.length?t:void 0},a.prototype.setKey=function(e){"branch"!==this.type&&(e=s(e=t.isBuffer(e)?f(e):e.slice(0),"leaf"===this.type),this.raw[0]=c(e))},a.prototype.getKey=function(){if("branch"!==this.type){var e=this.raw[0];return e=o(f(e))}},a.prototype.serialize=function(){return n.encode(this.raw)},a.prototype.hash=function(){return i.sha3(this.serialize())},a.prototype.toString=function(){var e=this.type;return e+=": [",this.raw.forEach((function(r){t.isBuffer(r)?e+=r.toString("hex")+", ":e+=r?"object, ":"empty, "})),e=e.slice(0,-2),e+="]"},a.prototype.getChildren=function(){var e=[];switch(this.type){case"leaf":break;case"extention":e.push([this.key,this.getValue()]);break;case"branch":for(var t=0;t<16;t++){var r=this.getValue(t);r&&e.push([[t],r])}}return e}}).call(this,r(3).Buffer)},function(e,t,r){"use strict";var n=r(126),i=r(1245)(n.ETH_STORAGE_TRIE);e.exports=i},function(e,t,r){"use strict";(function(t){var n=r(1197),i=r(1822),a=n.BN,s=new a("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0",16),o=function(){function e(r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=r||{};var i=[{name:"nonce",length:32,allowLess:!0,default:new t([])},{name:"gasPrice",length:32,allowLess:!0,default:new t([])},{name:"gasLimit",alias:"gas",length:32,allowLess:!0,default:new t([])},{name:"to",allowZero:!0,length:20,default:new t([])},{name:"value",length:32,allowLess:!0,default:new t([])},{name:"data",alias:"input",allowZero:!0,default:new t([])},{name:"v",allowZero:!0,default:new t([28])},{name:"r",length:32,allowZero:!0,allowLess:!0,default:new t([])},{name:"s",length:32,allowZero:!0,allowLess:!0,default:new t([])}];n.defineProperties(this,i,r),Object.defineProperty(this,"from",{enumerable:!0,configurable:!0,get:this.getSenderAddress.bind(this)});var a=n.bufferToInt(this.v),s=Math.floor((a-35)/2);s<0&&(s=0),this._chainId=s||r.chainId||0,this._homestead=!0}return e.prototype.toCreationAddress=function(){return""===this.to.toString("hex")},e.prototype.hash=function(e){void 0===e&&(e=!0);var t=void 0;if(e)t=this.raw;else if(this._chainId>0){var r=this.raw.slice();this.v=this._chainId,this.r=0,this.s=0,t=this.raw,this.raw=r}else t=this.raw.slice(0,6);return n.rlphash(t)},e.prototype.getChainId=function(){return this._chainId},e.prototype.getSenderAddress=function(){if(this._from)return this._from;var e=this.getSenderPublicKey();return this._from=n.publicToAddress(e),this._from},e.prototype.getSenderPublicKey=function(){if((!this._senderPubKey||!this._senderPubKey.length)&&!this.verifySignature())throw new Error("Invalid Signature");return this._senderPubKey},e.prototype.verifySignature=function(){var e=this.hash(!1);if(this._homestead&&1===new a(this.s).cmp(s))return!1;try{var t=n.bufferToInt(this.v);this._chainId>0&&(t-=2*this._chainId+8),this._senderPubKey=n.ecrecover(e,t,this.r,this.s)}catch(r){return!1}return!!this._senderPubKey},e.prototype.sign=function(e){var t=this.hash(!1),r=n.ecsign(t,e);this._chainId>0&&(r.v+=2*this._chainId+8),Object.assign(this,r)},e.prototype.getDataFee=function(){for(var e=this.raw[5],t=new a(0),r=0;r<e.length;r++)0===e[r]?t.iaddn(i.txDataZeroGas.v):t.iaddn(i.txDataNonZeroGas.v);return t},e.prototype.getBaseFee=function(){var e=this.getDataFee().iaddn(i.txGas.v);return this._homestead&&this.toCreationAddress()&&e.iaddn(i.txCreation.v),e},e.prototype.getUpfrontCost=function(){return new a(this.gasLimit).imul(new a(this.gasPrice)).iadd(new a(this.value))},e.prototype.validate=function(e){var t=[];return this.verifySignature()||t.push("Invalid Signature"),this.getBaseFee().cmp(new a(this.gasLimit))>0&&t.push(["gas limit is too low. Need at least "+this.getBaseFee()]),void 0===e||!1===e?0===t.length:t.join(" ")},e}();e.exports=o}).call(this,r(3).Buffer)},function(e){e.exports=JSON.parse('{"genesisGasLimit":{"v":5000,"d":"Gas limit of the Genesis block."},"genesisDifficulty":{"v":17179869184,"d":"Difficulty of the Genesis block."},"genesisNonce":{"v":"0x0000000000000042","d":"the geneis nonce"},"genesisExtraData":{"v":"0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa","d":"extra data "},"genesisHash":{"v":"0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3","d":"genesis hash"},"genesisStateRoot":{"v":"0xd7f8974fb5ac78d9ac099b9ad5018bedc2ce0a72dad1827a1709da30580f0544","d":"the genesis state root"},"minGasLimit":{"v":5000,"d":"Minimum the gas limit may ever be."},"gasLimitBoundDivisor":{"v":1024,"d":"The bound divisor of the gas limit, used in update calculations."},"minimumDifficulty":{"v":131072,"d":"The minimum that the difficulty may ever be."},"difficultyBoundDivisor":{"v":2048,"d":"The bound divisor of the difficulty, used in the update calculations."},"durationLimit":{"v":13,"d":"The decision boundary on the blocktime duration used to determine whether difficulty should go up or not."},"maximumExtraDataSize":{"v":32,"d":"Maximum size extra data may be after Genesis."},"epochDuration":{"v":30000,"d":"Duration between proof-of-work epochs."},"stackLimit":{"v":1024,"d":"Maximum size of VM stack allowed."},"callCreateDepth":{"v":1024,"d":"Maximum depth of call/create stack."},"tierStepGas":{"v":[0,2,3,5,8,10,20],"d":"Once per operation, for a selection of them."},"expGas":{"v":10,"d":"Once per EXP instuction."},"expByteGas":{"v":10,"d":"Times ceil(log256(exponent)) for the EXP instruction."},"sha3Gas":{"v":30,"d":"Once per SHA3 operation."},"sha3WordGas":{"v":6,"d":"Once per word of the SHA3 operation\'s data."},"sloadGas":{"v":50,"d":"Once per SLOAD operation."},"sstoreSetGas":{"v":20000,"d":"Once per SSTORE operation if the zeroness changes from zero."},"sstoreResetGas":{"v":5000,"d":"Once per SSTORE operation if the zeroness does not change from zero."},"sstoreRefundGas":{"v":15000,"d":"Once per SSTORE operation if the zeroness changes to zero."},"jumpdestGas":{"v":1,"d":"Refunded gas, once per SSTORE operation if the zeroness changes to zero."},"logGas":{"v":375,"d":"Per LOG* operation."},"logDataGas":{"v":8,"d":"Per byte in a LOG* operation\'s data."},"logTopicGas":{"v":375,"d":"Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas."},"createGas":{"v":32000,"d":"Once per CREATE operation & contract-creation transaction."},"callGas":{"v":40,"d":"Once per CALL operation & message call transaction."},"callStipend":{"v":2300,"d":"Free gas given at beginning of call."},"callValueTransferGas":{"v":9000,"d":"Paid for CALL when the value transfor is non-zero."},"callNewAccountGas":{"v":25000,"d":"Paid for CALL when the destination address didn\'t exist prior."},"suicideRefundGas":{"v":24000,"d":"Refunded following a suicide operation."},"memoryGas":{"v":3,"d":"Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL."},"quadCoeffDiv":{"v":512,"d":"Divisor for the quadratic particle of the memory cost equation."},"createDataGas":{"v":200,"d":""},"txGas":{"v":21000,"d":"Per transaction. NOTE: Not payable on data of calls between transactions."},"txCreation":{"v":32000,"d":"the cost of creating a contract via tx"},"txDataZeroGas":{"v":4,"d":"Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions."},"txDataNonZeroGas":{"v":68,"d":"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions."},"copyGas":{"v":3,"d":"Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added."},"ecrecoverGas":{"v":3000,"d":""},"sha256Gas":{"v":60,"d":""},"sha256WordGas":{"v":12,"d":""},"ripemd160Gas":{"v":600,"d":""},"ripemd160WordGas":{"v":120,"d":""},"identityGas":{"v":15,"d":""},"identityWordGas":{"v":3,"d":""},"minerReward":{"v":"5000000000000000000","d":"the amount a miner get rewarded for mining a block"},"ommerReward":{"v":"625000000000000000","d":"The amount of wei a miner of an uncle block gets for being inculded in the blockchain"},"niblingReward":{"v":"156250000000000000","d":"the amount a miner gets for inculding a uncle"},"homeSteadForkNumber":{"v":1150000,"d":"the block that the Homestead fork started at"},"homesteadRepriceForkNumber":{"v":2463000,"d":"the block that the Homestead Reprice (EIP150) fork started at"},"timebombPeriod":{"v":100000,"d":"Exponential difficulty timebomb period"},"freeBlockPeriod":{"v":2}}')},function(e,t,r){"use strict";var n=r(126),i=r(1371),a=r(1245)(n.ETH_TX_TRIE,i);e.exports=a},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,r){"use strict";(function(t){var n=r(185),i=r(2),a=r(13),s=r(20),o=r(21),u=r(39),f=r(41),c=r(42),h=r(293),d=r(11),p=r(1573),l=r(1575),b=r(1581),v=r(507),y=r(126),m=r(4),g=r(1589),_=r(1590).extendIterator,w=function(){function e(t){s(this,e);var r=p(e.defaultOptions,t);if(!r.blockService)throw new Error("Missing blockservice");this.bs=r.blockService,this.resolvers={},"function"!==typeof r.loadFormat?this.loadFormat=function(){var e=a(i.mark((function e(t){var r;return i.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:throw r=y.print[t],new Error('No resolver found for codec "'.concat(r,'"'));case 2:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}():this.loadFormat=r.loadFormat;var n=!0,o=!1,u=void 0;try{for(var f,c=r.formats[Symbol.iterator]();!(n=(f=c.next()).done);n=!0){var h=f.value;this.addFormat(h)}}catch(d){o=!0,u=d}finally{try{n||null==c.return||c.return()}finally{if(o)throw u}}}return o(e,[{key:"addFormat",value:function(e){var t=e.codec;if(this.resolvers[e.format]){var r=y.print[t];throw new Error('Resolver already exists for codec "'.concat(r,'"'))}return this.resolvers[t]=e,this}},{key:"removeFormat",value:function(e){return this.resolvers[e]&&delete this.resolvers[e],this}},{key:"resolve",value:function(e,t){if(!d.isCID(e))throw new Error("`cid` argument must be a CID");if("string"!==typeof t)throw new Error("`path` argument must be a string");return _(c(i.mark((function r(){var n,a,s,o;return i.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if(null===e){r.next=16;break}return r.next=3,f(this._getFormat(e.codec));case 3:return n=r.sent,r.next=6,f(m(this.bs.get.bind(this.bs))(e));case 6:if(a=r.sent,s=n.resolver.resolve(a.data,t),t=s.remainderPath,o=s.value,1===Object.keys(o).length&&"/"in o)try{o=new d(o["/"])}catch(i){o=null}return e=d.isCID(o)?o:null,r.next=14,{remainderPath:t,value:o};case 14:r.next=0;break;case 16:case"end":return r.stop()}}),r,this)}))).bind(this)())}},{key:"get",value:function(){var e=a(i.mark((function e(t){var r,n,a;return i.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,m(this.bs.get.bind(this.bs))(t);case 2:return r=e.sent,e.next=5,this._getFormat(r.cid.codec);case 5:return n=e.sent,a=n.util.deserialize(r.data),e.abrupt("return",a);case 8:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}()},{key:"getMany",value:function(e){if(!g.isIterable(e)||"string"===typeof e||t.isBuffer(e))throw new Error("`cids` must be an iterable of CIDs");return _(c(i.mark((function t(){var r,n,a,s,o,c,h;return i.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:r=!0,n=!1,t.prev=2,s=u(e);case 4:return t.next=6,f(s.next());case 6:return o=t.sent,r=o.done,t.next=10,f(o.value);case 10:if(c=t.sent,r){t.next=18;break}return h=c,t.next=15,this.get(h);case 15:r=!0,t.next=4;break;case 18:t.next=24;break;case 20:t.prev=20,t.t0=t.catch(2),n=!0,a=t.t0;case 24:if(t.prev=24,t.prev=25,r||null==s.return){t.next=29;break}return t.next=29,f(s.return());case 29:if(t.prev=29,!n){t.next=32;break}throw a;case 32:return t.finish(29);case 33:return t.finish(24);case 34:case"end":return t.stop()}}),t,this,[[2,20,24,34],[25,,29,33]])}))).bind(this)())}},{key:"put",value:function(){var e=a(i.mark((function e(t,r,n){var a,s,o,u,f,c,d;return i.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(void 0!==r){e.next=2;break}throw new Error("`put` requires a format");case 2:if("number"===typeof r){e.next=4;break}throw new Error("`format` parameter must be number (multicodec)");case 4:return e.next=6,this._getFormat(r);case 6:return a=e.sent,s={hashAlg:a.defaultHashAlg,cidVersion:1,onlyHash:!1},o=p(s,n),u={cidVersion:o.cidVersion,hashAlg:o.hashAlg,onlyHash:o.onlyHash},f=a.util.serialize(t),e.next=13,a.util.cid(f,u);case 13:if(c=e.sent,o.onlyHash){e.next=18;break}return d=new h(f,c),e.next=18,m(this.bs.put.bind(this.bs))(d);case 18:return e.abrupt("return",c);case 19:case"end":return e.stop()}}),e,this)})));return function(t,r,n){return e.apply(this,arguments)}}()},{key:"putMany",value:function(e,r,n){if(!g.isIterable(e)||"string"===typeof e||t.isBuffer(e))throw new Error("`nodes` must be an iterable");if(void 0===r)throw new Error("`put` requires a format");if("number"!==typeof r)throw new Error("`format` parameter must be number (multicodec)");var a,s;return _(c(i.mark((function t(){var o,c,h,d,l,b,v,y;return i.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:o=!0,c=!1,t.prev=2,d=u(e);case 4:return t.next=6,f(d.next());case 6:return l=t.sent,o=l.done,t.next=10,f(l.value);case 10:if(b=t.sent,o){t.next=24;break}if(v=b,void 0!==a){t.next=19;break}return t.next=16,f(this._getFormat(r));case 16:s=t.sent,y={hashAlg:s.defaultHashAlg,cidVersion:1,onlyHash:!1},a=p(y,n);case 19:return t.next=21,this.put(v,r,a);case 21:o=!0,t.next=4;break;case 24:t.next=30;break;case 26:t.prev=26,t.t0=t.catch(2),c=!0,h=t.t0;case 30:if(t.prev=30,t.prev=31,o||null==d.return){t.next=35;break}return t.next=35,f(d.return());case 35:if(t.prev=35,!c){t.next=38;break}throw h;case 38:return t.finish(35);case 39:return t.finish(30);case 40:case"end":return t.stop()}}),t,this,[[2,26,30,40],[31,,35,39]])}))).bind(this)())}},{key:"remove",value:function(){var e=a(i.mark((function e(t){return i.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",m(this.bs.delete.bind(this.bs))(t));case 1:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}()},{key:"removeMany",value:function(e){if(!g.isIterable(e)||"string"===typeof e||t.isBuffer(e))throw new Error("`cids` must be an iterable of CIDs");return _(c(i.mark((function t(){var r,n,a,s,o,c,h;return i.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:r=!0,n=!1,t.prev=2,s=u(e);case 4:return t.next=6,f(s.next());case 6:return o=t.sent,r=o.done,t.next=10,f(o.value);case 10:if(c=t.sent,r){t.next=18;break}return h=c,t.next=15,this.remove(h);case 15:r=!0,t.next=4;break;case 18:t.next=24;break;case 20:t.prev=20,t.t0=t.catch(2),n=!0,a=t.t0;case 24:if(t.prev=24,t.prev=25,r||null==s.return){t.next=29;break}return t.next=29,f(s.return());case 29:if(t.prev=29,!n){t.next=32;break}throw a;case 32:return t.finish(29);case 33:return t.finish(24);case 34:case"end":return t.stop()}}),t,this,[[2,20,24,34],[25,,29,33]])}))).bind(this)())}},{key:"tree",value:function(e,t,r){var s=this;"object"===typeof t&&(r=t,t=void 0),t=t||"";var o=p({recursive:!1},r),u=function(){var e=a(i.mark((function e(t,r){var n,a;return i.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,s._getFormat(t.cid.codec);case 2:if(n=e.sent,a=n.resolver.resolve(t.data,r),!d.isCID(a.value)){e.next=8;break}return e.abrupt("return",a.value);case 8:return e.abrupt("return",null);case 9:case"end":return e.stop()}}),e)})));return function(t,r){return e.apply(this,arguments)}}();return _(c(i.mark((function r(){var a,s,c,h,d,p,l,b,v;return i.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:a=[],c=[{cid:e,basePath:""}];case 2:if(!(a.length>0||c.length>0)){r.next=28;break}if(!(0===a.length&&c.length>0)){r.next=15;break}return d=c.shift(),e=d.cid,h=d.basePath,r.next=9,f(this._getFormat(e.codec));case 9:return p=r.sent,r.next=12,f(m(this.bs.get.bind(this.bs))(e));case 12:s=r.sent,l=p.resolver.tree(s.data),a.push.apply(a,n(l));case 15:if(b=a.shift(),v=h+b,!o.recursive){r.next=22;break}return r.next=20,f(u(s,b));case 20:null!==(e=r.sent)&&c.push({cid:e,basePath:v+"/"});case 22:if(!(v.startsWith(t)&&v.length>t.length)){r.next=26;break}return t.length>0&&(v=v.slice(t.length+1)),r.next=26,v;case 26:r.next=2;break;case 28:case"end":return r.stop()}}),r,this)}))).bind(this)())}},{key:"_getFormat",value:function(){var e=a(i.mark((function e(t){var r,n;return i.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("string"===typeof t&&(r=t.toUpperCase().replace(/-/g,"_"),t=y[r]),!this.resolvers[t]){e.next=3;break}return e.abrupt("return",this.resolvers[t]);case 3:return e.next=5,this.loadFormat(t);case 5:return n=e.sent,this.addFormat(n),e.abrupt("return",n);case 8:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}()}]),e}();w.defaultOptions={formats:[l,b,v]},e.exports=w}).call(this,r(3).Buffer)},function(e,t,r){"use strict";t.resolver=r(1591),t.util=r(1316),t.codec=t.util.codec,t.defaultHashAlg=t.util.defaultHashAlg},function(e,t,r){"use strict";t.util=r(1329),t.resolver=r(1676),t.codec=t.util.codec,t.defaultHashAlg=t.util.defaultHashAlg},function(e,t,r){"use strict";t.DAGNode=r(1677),t.DAGLink=r(1336),t.resolver=r(1682),t.util=r(1337),t.codec=t.util.codec,t.defaultHashAlg=t.util.defaultHashAlg},function(e,t,r){"use strict";t.util=r(1338),t.resolver=r(1693),t.codec=t.util.codec,t.defaultHashAlg=t.util.defaultHashAlg},function(e,t,r){"use strict";t.resolver=r(1694),t.util=r(1339),t.codec=t.util.codec,t.defaultHashAlg=t.util.defaultHashAlg},function(e,t,r){"use strict";t.ethAccountSnapshot=r(1367),t.ethBlock=r(1370),t.ethBlockList=r(1817),t.ethStateTrie=r(1818),t.ethStorageTrie=r(1820),t.ethTx=r(1371),t.ethTxTrie=r(1823)}])]);
//# sourceMappingURL=6.627f9f76.chunk.js.mapίθ