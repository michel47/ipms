
áÙ#!/usr/bin/perl
# $Source: /my/perl/script/kwextract.pl,v $
# $mutable /.brings/system/bin/kwextract.pl$
# $Previous: QmXiMwWiGcFnTeX94sRDPVyFYYTf2mrA79rwaABmYQGUQe$
# $tic: 1575654442$

our $dbug=0;
#--------------------------------
# -- Options parsing ...
#
my $yml = 0;
while (@ARGV && $ARGV[0] =~ m/^-/)
{
  $_ = shift;
  #/^-(l|r|i|s)(\d+)/ && (eval "\$$1 = \$2", next);
  if (/^-d(?:e?bug)?/) { $dbug= 1; }
  elsif (/^-k(?:ey)?+(\w+)?$/) { $key= $1 ? "$1" : shift || 'source' }
  elsif (/^-y(?:ml)?/) { $yml= 1; }
  else                  { die "Unrecognized switch: $_\n"; }

}
#understand variable=value on the command line...
eval "\$$1='$2'"while $ARGV[0] =~ /^(\w+)=(.*)/ && shift;



my $keywords = {};
my $file=shift;
if (-e $file) {
   # extraction of RCS keyword source
   open F,'<',$file;
   while (<F>) {
      if (m/\$([A-Z]\w+|qm|mutable|tic):\s*([^\$]*?)\s*\$/) {
	my $keyw=lc($1);
	$keywords->{$keyw} = $2;
      } else {
	 chomp;
	 printf "dbug: %s\n",$_ if $dbug;
      }
   }
   close F;
   if (! defined $keywords->{mutable}) {
      if ($file =~ m{^/.*/([^/]+)/([^/]+)/?$}) {
	 $keywords->{mutable} = $1.'/'.$2;
      } else {
	 use Cwd qw(cwd);
	 cwd() =~ m{/([^/]+)/?$};
	 $keywords->{mutable} = '/.brings/mutables/'.$1.'/'.$file;
      }
   }

} else {
  $source=$file||'/from/the/ultimate/divine/source/empty_file.blob,v';
}

if ($yml) {
   use YAML::Syck qw(Dump);
   printf "%s\n",Dump($keywords);
} elsif (defined $keywords->{$key}) {
   print $keywords->{$key};
} elsif (defined $keywords->{'mutable'}) {
   print $keywords->{mutable};
} else {
   print $keywords->{source};
}

exit $?;
1;
Ù